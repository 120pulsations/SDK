# Makefile generated by XPJ for OSX
-include Makefile.custom
ProjectName = PhysXVehicle
PhysXVehicle_cppfiles   += ./../../PhysXVehicle/src/PxVehicleComponents.cpp
PhysXVehicle_cppfiles   += ./../../PhysXVehicle/src/PxVehicleDrive.cpp
PhysXVehicle_cppfiles   += ./../../PhysXVehicle/src/PxVehicleDrive4W.cpp
PhysXVehicle_cppfiles   += ./../../PhysXVehicle/src/PxVehicleDriveTank.cpp
PhysXVehicle_cppfiles   += ./../../PhysXVehicle/src/PxVehicleSDK.cpp
PhysXVehicle_cppfiles   += ./../../PhysXVehicle/src/PxVehicleSuspWheelTire4.cpp
PhysXVehicle_cppfiles   += ./../../PhysXVehicle/src/PxVehicleTireFriction.cpp
PhysXVehicle_cppfiles   += ./../../PhysXVehicle/src/PxVehicleUpdate.cpp
PhysXVehicle_cppfiles   += ./../../PhysXVehicle/src/PxVehicleWheels.cpp
PhysXVehicle_cppfiles   += ./../../PhysXVehicle/src/VehicleUtilControl.cpp
PhysXVehicle_cppfiles   += ./../../PhysXVehicle/src/VehicleUtilSetup.cpp
PhysXVehicle_cppfiles   += ./../../PhysXVehicle/src/VehicleUtilTelemetry.cpp

PhysXVehicle_checked_hpaths    := 
PhysXVehicle_checked_hpaths    += ./../../../Include/foundation
PhysXVehicle_checked_hpaths    += ./../../foundation/include
PhysXVehicle_checked_hpaths    += ./../../../Include/physxprofilesdk
PhysXVehicle_checked_hpaths    += ./../../../Include/physxvisualdebuggersdk
PhysXVehicle_checked_hpaths    += ./../../../Include/vehicle
PhysXVehicle_checked_hpaths    += ./../../../Include/common
PhysXVehicle_checked_hpaths    += ./../../../Include/geometry
PhysXVehicle_checked_hpaths    += ./../../../Include/extensions
PhysXVehicle_checked_hpaths    += ./../../../Include
PhysXVehicle_checked_hpaths    += ./../../Common/src
PhysXVehicle_checked_lpaths    := 
PhysXVehicle_checked_defines   := $(PhysXVehicle_custom_defines)
PhysXVehicle_checked_defines   += PX_PHYSX_STATIC_LIB
PhysXVehicle_checked_defines   += NDEBUG
PhysXVehicle_checked_defines   += PX_CHECKED
PhysXVehicle_checked_defines   += PX_SUPPORT_VISUAL_DEBUGGER
PhysXVehicle_checked_libraries := 
PhysXVehicle_checked_cflags    := $(PhysXVehicle_custom_cflags)
PhysXVehicle_checked_cflags    += $(addprefix -D, $(PhysXVehicle_checked_defines))
PhysXVehicle_checked_cflags    += $(addprefix -I, $(PhysXVehicle_checked_hpaths))
PhysXVehicle_checked_cflags  += -arch i386
PhysXVehicle_checked_cflags  += -pipe -mmacosx-version-min=10.5 -msse2 -mfpmath=sse -malign-double -ffast-math -fno-exceptions -fno-rtti -fvisibility=hidden -fvisibility-inlines-hidden -Wno-invalid-offsetof -Wno-unknown-pragmas
PhysXVehicle_checked_cflags  += -g3 -gdwarf-2 -O3 -fno-strict-aliasing
PhysXVehicle_checked_lflags    := $(PhysXVehicle_custom_lflags)
PhysXVehicle_checked_lflags    += $(addprefix -L, $(PhysXVehicle_checked_lpaths))
PhysXVehicle_checked_lflags  += $(addprefix -l, $(PhysXVehicle_checked_libraries))
PhysXVehicle_checked_lflags  += -arch i386
PhysXVehicle_checked_objsdir  = $(OBJS_DIR)/PhysXVehicle_checked
PhysXVehicle_checked_cpp_o    = $(addprefix $(PhysXVehicle_checked_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(PhysXVehicle_cppfiles)))))
PhysXVehicle_checked_c_o      = $(addprefix $(PhysXVehicle_checked_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.o, $(PhysXVehicle_cfiles)))))
PhysXVehicle_checked_cc_o      = $(addprefix $(PhysXVehicle_checked_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.o, $(PhysXVehicle_ccfiles)))))
PhysXVehicle_checked_obj      = $(PhysXVehicle_checked_cpp_o) $(PhysXVehicle_checked_cc_o) $(PhysXVehicle_checked_c_o)
PhysXVehicle_checked_bin      := ./../../../Lib/osx32/libPhysX3VehicleCHECKED.a

clean_PhysXVehicle_checked: 
	@$(ECHO) clean PhysXVehicle checked
	@$(RMDIR) $(PhysXVehicle_checked_objsdir)
	@$(RMDIR) $(PhysXVehicle_checked_bin)

build_PhysXVehicle_checked: postbuild_PhysXVehicle_checked
postbuild_PhysXVehicle_checked: mainbuild_PhysXVehicle_checked
mainbuild_PhysXVehicle_checked: prebuild_PhysXVehicle_checked $(PhysXVehicle_checked_bin)
prebuild_PhysXVehicle_checked:

$(PhysXVehicle_checked_bin): $(PhysXVehicle_checked_obj) 
	@mkdir -p `dirname ./../../../Lib/osx32/libPhysX3VehicleCHECKED.a`
	@$(AR) r $(PhysXVehicle_checked_bin) $(PhysXVehicle_checked_obj)
	@$(RANLIB) $(PhysXVehicle_checked_bin)
	@$(ECHO) building $@ complete!

$(PhysXVehicle_checked_cpp_o): $(PhysXVehicle_checked_objsdir)/%.o: $(PhysXVehicle_cppfiles)
	@$(ECHO) PhysXVehicle: compiling checked $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(PhysXVehicle_checked_objsdir),, $@))), $(PhysXVehicle_cppfiles))...
	@mkdir -p $(dir $(@))
	@$(CXX) $(PhysXVehicle_checked_cflags) -c $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(PhysXVehicle_checked_objsdir),, $@))), $(PhysXVehicle_cppfiles)) -o $@ 
	@$(PARSEDEPEND)

$(PhysXVehicle_checked_c_o): $(PhysXVehicle_checked_objsdir)/%.o: $(PhysXVehicle_cfiles)
	@$(ECHO) PhysXVehicle: compiling checked $(filter %$(strip $(subst .c.o,.c, $(subst $(PhysXVehicle_checked_objsdir),, $@))), $(PhysXVehicle_cfiles))...
	@mkdir -p $(dir $(@))
	@$(CC) $(PhysXVehicle_checked_cflags) -c $(filter %$(strip $(subst .c.o,.c, $(subst $(PhysXVehicle_checked_objsdir),, $@))), $(PhysXVehicle_cfiles)) -o $@ 
	@$(PARSEDEPEND)

$(PhysXVehicle_checked_cc_o): $(PhysXVehicle_checked_objsdir)/%.o: $(PhysXVehicle_ccfiles)
	@$(ECHO) PhysXVehicle: compiling  $(filter %$(strip $(subst .cc.o,.cc, $(subst $(PhysXVehicle_checked_objsdir),, $@))), $(PhysXVehicle_ccfiles))...
	@mkdir -p $(dir $(@))
	@$(CXX) $(PhysXVehicle_checked_cflags) -c $(filter %$(strip $(subst .cc.o,.cc, $(subst $(PhysXVehicle_checked_objsdir),, $@))), $(PhysXVehicle_ccfiles)) -o $@ 
	@$(PARSEDEPEND)

PhysXVehicle_profile_hpaths    := 
PhysXVehicle_profile_hpaths    += ./../../../Include/foundation
PhysXVehicle_profile_hpaths    += ./../../foundation/include
PhysXVehicle_profile_hpaths    += ./../../../Include/physxprofilesdk
PhysXVehicle_profile_hpaths    += ./../../../Include/physxvisualdebuggersdk
PhysXVehicle_profile_hpaths    += ./../../../Include/vehicle
PhysXVehicle_profile_hpaths    += ./../../../Include/common
PhysXVehicle_profile_hpaths    += ./../../../Include/geometry
PhysXVehicle_profile_hpaths    += ./../../../Include/extensions
PhysXVehicle_profile_hpaths    += ./../../../Include
PhysXVehicle_profile_hpaths    += ./../../Common/src
PhysXVehicle_profile_lpaths    := 
PhysXVehicle_profile_defines   := $(PhysXVehicle_custom_defines)
PhysXVehicle_profile_defines   += PX_PHYSX_STATIC_LIB
PhysXVehicle_profile_defines   += NDEBUG
PhysXVehicle_profile_defines   += PX_PROFILE
PhysXVehicle_profile_defines   += PX_SUPPORT_VISUAL_DEBUGGER
PhysXVehicle_profile_libraries := 
PhysXVehicle_profile_cflags    := $(PhysXVehicle_custom_cflags)
PhysXVehicle_profile_cflags    += $(addprefix -D, $(PhysXVehicle_profile_defines))
PhysXVehicle_profile_cflags    += $(addprefix -I, $(PhysXVehicle_profile_hpaths))
PhysXVehicle_profile_cflags  += -arch i386
PhysXVehicle_profile_cflags  += -pipe -mmacosx-version-min=10.5 -msse2 -mfpmath=sse -malign-double -ffast-math -fno-exceptions -fno-rtti -fvisibility=hidden -fvisibility-inlines-hidden -Wno-invalid-offsetof -Wno-unknown-pragmas
PhysXVehicle_profile_cflags  += -O3 -fno-strict-aliasing
PhysXVehicle_profile_lflags    := $(PhysXVehicle_custom_lflags)
PhysXVehicle_profile_lflags    += $(addprefix -L, $(PhysXVehicle_profile_lpaths))
PhysXVehicle_profile_lflags  += $(addprefix -l, $(PhysXVehicle_profile_libraries))
PhysXVehicle_profile_lflags  += -arch i386
PhysXVehicle_profile_objsdir  = $(OBJS_DIR)/PhysXVehicle_profile
PhysXVehicle_profile_cpp_o    = $(addprefix $(PhysXVehicle_profile_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(PhysXVehicle_cppfiles)))))
PhysXVehicle_profile_c_o      = $(addprefix $(PhysXVehicle_profile_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.o, $(PhysXVehicle_cfiles)))))
PhysXVehicle_profile_cc_o      = $(addprefix $(PhysXVehicle_profile_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.o, $(PhysXVehicle_ccfiles)))))
PhysXVehicle_profile_obj      = $(PhysXVehicle_profile_cpp_o) $(PhysXVehicle_profile_cc_o) $(PhysXVehicle_profile_c_o)
PhysXVehicle_profile_bin      := ./../../../Lib/osx32/libPhysX3VehiclePROFILE.a

clean_PhysXVehicle_profile: 
	@$(ECHO) clean PhysXVehicle profile
	@$(RMDIR) $(PhysXVehicle_profile_objsdir)
	@$(RMDIR) $(PhysXVehicle_profile_bin)

build_PhysXVehicle_profile: postbuild_PhysXVehicle_profile
postbuild_PhysXVehicle_profile: mainbuild_PhysXVehicle_profile
mainbuild_PhysXVehicle_profile: prebuild_PhysXVehicle_profile $(PhysXVehicle_profile_bin)
prebuild_PhysXVehicle_profile:

$(PhysXVehicle_profile_bin): $(PhysXVehicle_profile_obj) 
	@mkdir -p `dirname ./../../../Lib/osx32/libPhysX3VehiclePROFILE.a`
	@$(AR) r $(PhysXVehicle_profile_bin) $(PhysXVehicle_profile_obj)
	@$(RANLIB) $(PhysXVehicle_profile_bin)
	@$(ECHO) building $@ complete!

$(PhysXVehicle_profile_cpp_o): $(PhysXVehicle_profile_objsdir)/%.o: $(PhysXVehicle_cppfiles)
	@$(ECHO) PhysXVehicle: compiling profile $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(PhysXVehicle_profile_objsdir),, $@))), $(PhysXVehicle_cppfiles))...
	@mkdir -p $(dir $(@))
	@$(CXX) $(PhysXVehicle_profile_cflags) -c $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(PhysXVehicle_profile_objsdir),, $@))), $(PhysXVehicle_cppfiles)) -o $@ 
	@$(PARSEDEPEND)

$(PhysXVehicle_profile_c_o): $(PhysXVehicle_profile_objsdir)/%.o: $(PhysXVehicle_cfiles)
	@$(ECHO) PhysXVehicle: compiling profile $(filter %$(strip $(subst .c.o,.c, $(subst $(PhysXVehicle_profile_objsdir),, $@))), $(PhysXVehicle_cfiles))...
	@mkdir -p $(dir $(@))
	@$(CC) $(PhysXVehicle_profile_cflags) -c $(filter %$(strip $(subst .c.o,.c, $(subst $(PhysXVehicle_profile_objsdir),, $@))), $(PhysXVehicle_cfiles)) -o $@ 
	@$(PARSEDEPEND)

$(PhysXVehicle_profile_cc_o): $(PhysXVehicle_profile_objsdir)/%.o: $(PhysXVehicle_ccfiles)
	@$(ECHO) PhysXVehicle: compiling  $(filter %$(strip $(subst .cc.o,.cc, $(subst $(PhysXVehicle_profile_objsdir),, $@))), $(PhysXVehicle_ccfiles))...
	@mkdir -p $(dir $(@))
	@$(CXX) $(PhysXVehicle_profile_cflags) -c $(filter %$(strip $(subst .cc.o,.cc, $(subst $(PhysXVehicle_profile_objsdir),, $@))), $(PhysXVehicle_ccfiles)) -o $@ 
	@$(PARSEDEPEND)

PhysXVehicle_release_hpaths    := 
PhysXVehicle_release_hpaths    += ./../../../Include/foundation
PhysXVehicle_release_hpaths    += ./../../foundation/include
PhysXVehicle_release_hpaths    += ./../../../Include/physxprofilesdk
PhysXVehicle_release_hpaths    += ./../../../Include/physxvisualdebuggersdk
PhysXVehicle_release_hpaths    += ./../../../Include/vehicle
PhysXVehicle_release_hpaths    += ./../../../Include/common
PhysXVehicle_release_hpaths    += ./../../../Include/geometry
PhysXVehicle_release_hpaths    += ./../../../Include/extensions
PhysXVehicle_release_hpaths    += ./../../../Include
PhysXVehicle_release_hpaths    += ./../../Common/src
PhysXVehicle_release_lpaths    := 
PhysXVehicle_release_defines   := $(PhysXVehicle_custom_defines)
PhysXVehicle_release_defines   += PX_PHYSX_STATIC_LIB
PhysXVehicle_release_defines   += NDEBUG
PhysXVehicle_release_libraries := 
PhysXVehicle_release_cflags    := $(PhysXVehicle_custom_cflags)
PhysXVehicle_release_cflags    += $(addprefix -D, $(PhysXVehicle_release_defines))
PhysXVehicle_release_cflags    += $(addprefix -I, $(PhysXVehicle_release_hpaths))
PhysXVehicle_release_cflags  += -arch i386
PhysXVehicle_release_cflags  += -pipe -mmacosx-version-min=10.5 -msse2 -mfpmath=sse -malign-double -ffast-math -fno-exceptions -fno-rtti -fvisibility=hidden -fvisibility-inlines-hidden -Wno-invalid-offsetof -Wno-unknown-pragmas
PhysXVehicle_release_cflags  += -O3 -fno-strict-aliasing
PhysXVehicle_release_lflags    := $(PhysXVehicle_custom_lflags)
PhysXVehicle_release_lflags    += $(addprefix -L, $(PhysXVehicle_release_lpaths))
PhysXVehicle_release_lflags  += $(addprefix -l, $(PhysXVehicle_release_libraries))
PhysXVehicle_release_lflags  += -arch i386
PhysXVehicle_release_objsdir  = $(OBJS_DIR)/PhysXVehicle_release
PhysXVehicle_release_cpp_o    = $(addprefix $(PhysXVehicle_release_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cpp, %.cpp.o, $(PhysXVehicle_cppfiles)))))
PhysXVehicle_release_c_o      = $(addprefix $(PhysXVehicle_release_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.c, %.c.o, $(PhysXVehicle_cfiles)))))
PhysXVehicle_release_cc_o      = $(addprefix $(PhysXVehicle_release_objsdir)/, $(subst ./, , $(subst ../, , $(patsubst %.cc, %.cc.o, $(PhysXVehicle_ccfiles)))))
PhysXVehicle_release_obj      = $(PhysXVehicle_release_cpp_o) $(PhysXVehicle_release_cc_o) $(PhysXVehicle_release_c_o)
PhysXVehicle_release_bin      := ./../../../Lib/osx32/libPhysX3Vehicle.a

clean_PhysXVehicle_release: 
	@$(ECHO) clean PhysXVehicle release
	@$(RMDIR) $(PhysXVehicle_release_objsdir)
	@$(RMDIR) $(PhysXVehicle_release_bin)

build_PhysXVehicle_release: postbuild_PhysXVehicle_release
postbuild_PhysXVehicle_release: mainbuild_PhysXVehicle_release
mainbuild_PhysXVehicle_release: prebuild_PhysXVehicle_release $(PhysXVehicle_release_bin)
prebuild_PhysXVehicle_release:

$(PhysXVehicle_release_bin): $(PhysXVehicle_release_obj) 
	@mkdir -p `dirname ./../../../Lib/osx32/libPhysX3Vehicle.a`
	@$(AR) r $(PhysXVehicle_release_bin) $(PhysXVehicle_release_obj)
	@$(RANLIB) $(PhysXVehicle_release_bin)
	@$(ECHO) building $@ complete!

$(PhysXVehicle_release_cpp_o): $(PhysXVehicle_release_objsdir)/%.o: $(PhysXVehicle_cppfiles)
	@$(ECHO) PhysXVehicle: compiling release $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(PhysXVehicle_release_objsdir),, $@))), $(PhysXVehicle_cppfiles))...
	@mkdir -p $(dir $(@))
	@$(CXX) $(PhysXVehicle_release_cflags) -c $(filter %$(strip $(subst .cpp.o,.cpp, $(subst $(PhysXVehicle_release_objsdir),, $@))), $(PhysXVehicle_cppfiles)) -o $@ 
	@$(PARSEDEPEND)

$(PhysXVehicle_release_c_o): $(PhysXVehicle_release_objsdir)/%.o: $(PhysXVehicle_cfiles)
	@$(ECHO) PhysXVehicle: compiling release $(filter %$(strip $(subst .c.o,.c, $(subst $(PhysXVehicle_release_objsdir),, $@))), $(PhysXVehicle_cfiles))...
	@mkdir -p $(dir $(@))
	@$(CC) $(PhysXVehicle_release_cflags) -c $(filter %$(strip $(subst .c.o,.c, $(subst $(PhysXVehicle_release_objsdir),, $@))), $(PhysXVehicle_cfiles)) -o $@ 
	@$(PARSEDEPEND)

$(PhysXVehicle_release_cc_o): $(PhysXVehicle_release_objsdir)/%.o: $(PhysXVehicle_ccfiles)
	@$(ECHO) PhysXVehicle: compiling  $(filter %$(strip $(subst .cc.o,.cc, $(subst $(PhysXVehicle_release_objsdir),, $@))), $(PhysXVehicle_ccfiles))...
	@mkdir -p $(dir $(@))
	@$(CXX) $(PhysXVehicle_release_cflags) -c $(filter %$(strip $(subst .cc.o,.cc, $(subst $(PhysXVehicle_release_objsdir),, $@))), $(PhysXVehicle_ccfiles)) -o $@ 
	@$(PARSEDEPEND)

